version: '3.8'

services:
  # Backend API service
  api:
    build:
      context: ../server
      dockerfile: Dockerfile
    container_name: intranet-api
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - PORT=5000
      - DATABASE_URL=postgres://postgres:postgres@db:5432/intranet
      - JWT_SECRET=your_jwt_secret_key_here
      - JWT_EXPIRATION=1d
      - SMTP_HOST=mailhog
      - SMTP_PORT=1025
      - SMTP_USER=
      - SMTP_PASS=
      - SMTP_FROM=noreply@intranet.local
      - STORAGE_PATH=/app/storage
      - REDIS_URL=redis://redis:6379
    volumes:
      - ../server:/app
      - /app/node_modules
      - ../storage:/app/storage
    depends_on:
      - db
      - redis
    networks:
      - intranet-network

  # Frontend client service
  client:
    build:
      context: ../client
      dockerfile: Dockerfile
    container_name: intranet-client
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:5000/api
      - REACT_APP_SOCKET_URL=http://localhost:5000
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ../client:/app
      - /app/node_modules
    depends_on:
      - api
    networks:
      - intranet-network

  # PostgreSQL database
  db:
    image: postgres:13-alpine
    container_name: intranet-db
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=intranet
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../database/init:/docker-entrypoint-initdb.d
    networks:
      - intranet-network

  # Redis for caching and session storage
  redis:
    image: redis:6-alpine
    container_name: intranet-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - intranet-network

  # MailHog for email testing
  mailhog:
    image: mailhog/mailhog
    container_name: intranet-mailhog
    restart: unless-stopped
    ports:
      - "8025:8025" # Web UI
      - "1025:1025" # SMTP
    networks:
      - intranet-network

  # MinIO for S3-compatible object storage
  minio:
    image: minio/minio
    container_name: intranet-minio
    restart: unless-stopped
    ports:
      - "9000:9000" # API
      - "9001:9001" # Console
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - intranet-network

  # pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4
    container_name: intranet-pgadmin
    restart: unless-stopped
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@intranet.local
      - PGADMIN_DEFAULT_PASSWORD=admin
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - db
    networks:
      - intranet-network

volumes:
  postgres_data:
  redis_data:
  minio_data:
  pgadmin_data:

networks:
  intranet-network:
    driver: bridge
